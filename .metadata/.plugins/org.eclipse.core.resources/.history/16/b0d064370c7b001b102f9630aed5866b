package ftps;

import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.net.SocketException;

import org.apache.commons.net.ftp.FTP;
import org.apache.commons.net.ftp.FTPClient;
import org.apache.commons.net.ftp.FTPFile;
import org.apache.commons.net.ftp.FTPSClient;

public class test2 {
	
	public static void download(String filename, String base, FTPSClient ftpClient)
	{
	    File basedir = new File(base);
	    basedir.mkdirs();

	    try
	    {
	        FTPFile[] ftpFiles = ftpClient.listFiles();
	        for (FTPFile file : ftpFiles)
	        {
	            if (!file.getName().equals(".") && !file.getName().equals("..")) {
	                // If Dealing with a directory, change to it and call the function again
	                if (file.isDirectory())
	                {
	                    // Change working Directory to this directory.
	                    ftpClient.changeWorkingDirectory(file.getName());
	                    // Recursive call to this method.
	                    download(ftpClient.printWorkingDirectory(), base);

	                    // Create the directory locally - in the right place
	                    File newDir = new File (base + "/" + ftpClient.printWorkingDirectory());
	                    newDir.mkdirs();

	                    // Come back out to the parent level.
	                    ftpClient.changeToParentDirectory();
	                }
	                else
	                {
	                    ftpClient.setFileType(FTPClient.BINARY_FILE_TYPE);
	                    String remoteFile1 = ftpClient.printWorkingDirectory() + "/" + file.getName();
	                    File downloadFile1 = new File(base + "/" + ftpClient.printWorkingDirectory() + "/" + file.getName());
	                    OutputStream outputStream1 = new BufferedOutputStream(new FileOutputStream(downloadFile1));
	                    boolean success = ftpClient.retrieveFile(remoteFile1, outputStream1);
	                    outputStream1.close();
	                }
	            }
	        }
	    }
	    catch(IOException ex)
	    {
	        System.out.println(ex);
	    }
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub

		String downloadtarget = "C:/opt/FileZillaServer/shardfolder/client1/test";
		String downloadpath = "D:/temp";
		
		
		FTPSClient ftpClient = new FTPSClient();
		try {
			ftpClient.connect("10.253.46.177");
			ftpClient.login("client1", "c1234567890");
			System.out.println("connect");
		
			downloadfile(ftpClient);
//			downloadFolder(ftpClient, downloadtarget, downloadpath);
			
		
			ftpClient.logout();
		} catch (SocketException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}
